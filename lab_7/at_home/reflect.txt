// Workshop 7 - Derived Classes
// File w7_at_home.cpp
// Version 2.0
// Date 2019/07/15
// Author       Yuki Waka
// Student number: 141082180
// Description
//
/////////////////////////////////////////////////////

1.Does the Hero class need to know about the existence of the SuperHero class?
 (Hint: search for “SuperHero” in Hero.cpp) 

Since I made 'SuperHero.h' to inherits the class of Hero, like this (class SuperHero : public Hero {...}),
I didn't need to put #include"SuperHero.h" inside the 'Hero.cpp.


2.Does the SuperHero class need to know about the existence of the Hero class? 
(Hint: search for “Hero” in SuperHero.cpp)

The same as 1.question, I didn't need to put Hero.h file inside the SuperHero.cpp , but
when I wanted to use Hero's private member, inside the SuperHero.cpp, I called Hero's member.
ex) SuperHero::SuperHero(const char* Name, int Health, int Strength, int Bonus, int Defends) : Hero (Name, Health, Strength) {...}

3.The program prints out “Ancient Battle!” when two Heroes fight. It prints out “Super Fight!” when two SuperHeroes fight. 
When you made a Hero fight a SuperHero, what did it print out?

It printed out “Ancient Battle!”.


4.	True or False: is the following definition for main valid? Explain.
int main() {
  Hero("Achilles", 20, 6) * Hero("Hector", 30, 5);
}
True. Each Hero class stored the member and exexute operator* to compare two Hero.

5.	True or False: is the following definition for main valid? Explain.
int main() {
 (Hero("Achilles", 20, 6) * Hero("Hector", 30, 5)) 
                          *
 (Hero("Atalanta", 10, 3) * Hero("Hippolyta", 10, 2));
}

False.
It executed three fight.
the main purpose of the above fight is print out only the winner, but 
it made three answer.

ex)
Ancient Battle! Atalanta vs Hippolyta : Winner is Atalanta in 4 rounds.
Ancient Battle! Achilles vs Hector : Winner is Hector in 4 rounds.
Ancient Battle! Hector vs Atalanta : Winner is Hector in 2 rounds. 
